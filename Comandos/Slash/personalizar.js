const { ApplicationCommandType, EmbedBuilder, ModalBuilder, TextInputBuilder, TextInputStyle, ActionRowBuilder, ButtonBuilder, ComponentType } = require("discord.js");
const { JsonDatabase } = require("wio.db");
const db = new JsonDatabase({ databasePath: "./databases/personalizar.json" });
const emoji = require("../../databases/myJsonEmojis.json");
const dbe = new JsonDatabase({ databasePath: "./databases/myJsonEmojis.json" });

module.exports = {
  name: "personalizar",
  description: "[üõ†|üí∞ Vendas Modera√ß√£o] Personalize a embed",
  type: ApplicationCommandType.ChatInput,
  run: async (client, interaction) => {

    const initialEmbed = new EmbedBuilder()
      .setTitle(`${interaction.guild.name} | Personalizar`)
      .setFooter({ text: `${interaction.guild.name} - Todos os direitos reservados.` });

    const initialButtons = new ActionRowBuilder()
      .addComponents(
        new ButtonBuilder()
          .setCustomId("personalizarmensagem")
          .setLabel("Mensagem de Compra")
          .setStyle(2)
          .setEmoji(`üë®‚Äçüè≠`),
        new ButtonBuilder()
          .setCustomId("personalizaremoji")
          .setLabel("Personalizar Emojis")
          .setDisabled(false)
          .setStyle(2)
          .setEmoji(`üîç`)
      );

    const msg = await interaction.reply({
      embeds: [initialEmbed],
      components: [initialButtons],
    });

    const user = interaction.user
    const intera√ß√£o = msg.createMessageComponentCollector({ componentType: ComponentType.Button, });
      intera√ß√£o.on("collect", async (interaction) => {
        if (user.id !== interaction.user.id) {
            return interaction.reply({
              content: `${emoji.interrogacao} | Oops... Parece que voc√™ n√£o foi o autor deste comando, ${interaction.user}. Utilize **/personalizar** para ver os comandos dispon√≠veis!`,
              ephemeral: true
            });
          }
       if(interaction.customId === "personalizarmensagem") {
        interaction.update({
            embeds:[
                new EmbedBuilder()
                .setTitle(`${interaction.guild.name} | Personalizar Mensagem de Compra`)
                .setFooter({text:"Escolha oque voc√™ deseja mudar:"})
                .setDescription(`**Titulo atual:** \`${db.get(`titulo`)}\` \n\n**Descri√ß√£o Atual:** ${db.get(`desc`)} \n\n **Rodap√© Atual:** \`${db.get(`rodape`) === "remover" ? "Sem rodap√©" : db.get(`rodape`)}\``)
            ],
            components:[
                new ActionRowBuilder()
                .addComponents(
                    new ButtonBuilder()
                    .setLabel("Titulo da embed")
                    .setStyle(2)
                    .setEmoji(`${emoji.configura√ß√µes}`)
                    .setCustomId("tituloembed"),
                    new ButtonBuilder()
                    .setLabel("Descri√ß√£o da embed")
                    .setStyle(2)
                    .setEmoji(`${emoji.configura√ß√µes}`)
                    .setCustomId("descembed"),
                    new ButtonBuilder()
                    .setLabel("Rodap√© da Embed")
                    .setStyle(2)
                    .setEmoji(`${emoji.configura√ß√µes}`)
                    .setCustomId("rodapeembed"),
                    new ButtonBuilder()
                    .setLabel("Bot√£o da embed")
                    .setStyle(2)
                    .setEmoji(`${emoji.configura√ß√µes}`)
                    .setCustomId("buttonembed"),
                    new ButtonBuilder()
                    .setLabel("Resetar embed")
                    .setStyle(4)
                    .setEmoji(`${emoji.configura√ß√µes}`)
                    .setCustomId("embedresetar"),
                ),
                new ActionRowBuilder()
                .addComponents(
                    new ButtonBuilder()
                    .setCustomId("voltarfr")
                    .setStyle(2)
                    .setEmoji(emoji.setaEsquerda)
                    .setLabel("Voltar")
                )
            ]
        })
       }
       if (interaction.customId === "voltarfr") {
        interaction.update({
            embeds: [
                new EmbedBuilder()
                    .setTitle(`${interaction.guild.name} | Personalizar`)
                    .setDescription(`Clique no que voc√™ deseja personalizar:`)
                    .setFooter({ text: `${interaction.guild.name} - Todos os direitos reservados.` })
            ],
            components: [
                new ActionRowBuilder()
                    .addComponents(
                        new ButtonBuilder()
                            .setCustomId("personalizarmensagem")
                            .setLabel("Mensagem de Compra")
                            .setStyle(2)
                            .setEmoji(`üë®‚Äçüè≠`),
                        new ButtonBuilder()
                            .setCustomId("personalizaremoji")
                            .setLabel("Personalizar Emojis")
                            .setDisabled(false)
                            .setStyle(2)
                            .setEmoji(`üîç`)
                    )
            ]
        });
    }
       if(interaction.customId === "embedresetar") {
        db.set(`titulo`, db.get(`backup.titulo`))
        db.set(`desc`, db.get(`backup.desc`))
        db.set(`rodape`, db.get(`backup.rodape`))
        db.set(`button.text`, db.get(`backup.button.text`))
        db.set(`button.style`, db.get(`backup.button.style`))
        db.set(`button.emoji`, db.get(`backup.button.emoji`))

        interaction.update({
            embeds:[
                new EmbedBuilder()
                .setTitle(`${interaction.guild.name} | Personalizar Mensagem de Compra`)
                .setFooter({text:"Escolha oque voc√™ deseja mudar:"})
                .setDescription(`**Titulo atual:** \`${db.get(`titulo`)}\` \n\n**Descri√ß√£o Atual:** ${db.get(`desc`)} \n\n **Rodap√© Atual:** \`${db.get(`rodape`) === "remover" ? "Sem rodap√©" : db.get(`rodape`)}\``)
            ],
            components:[
                new ActionRowBuilder()
                .addComponents(
                    new ButtonBuilder()
                    .setLabel("Titulo da embed")
                    .setStyle(2)
                    .setEmoji(`${emoji.configura√ß√µes}`)
                    .setCustomId("tituloembed"),
                    new ButtonBuilder()
                    .setLabel("Descri√ß√£o da embed")
                    .setStyle(2)
                    .setEmoji(`${emoji.configura√ß√µes}`)
                    .setCustomId("descembed"),
                    new ButtonBuilder()
                    .setLabel("Rodap√© da Embed")
                    .setStyle(2)
                    .setEmoji(`${emoji.configura√ß√µes}`)
                    .setCustomId("rodapeembed"),
                    new ButtonBuilder()
                    .setLabel("Bot√£o da embed")
                    .setStyle(2)
                    .setEmoji(`${emoji.configura√ß√µes}`)
                    .setCustomId("buttonembed"),
                    new ButtonBuilder()
                    .setLabel("Resetar embed")
                    .setStyle(4)
                    .setEmoji(`${emoji.configura√ß√µes}`)
                    .setCustomId("embedresetar"),
                ),
                new ActionRowBuilder()
                .addComponents(
                    new ButtonBuilder()
                    .setCustomId("voltarfr")
                    .setStyle(2)
                    .setEmoji(emoji.setaEsquerda)
                    .setLabel("Voltar")
                )
            ]
        })
       }




       if (interaction.isButton()) {
        if (interaction.customId === "personalizaremoji") {
            var emojis = '';
            dbe.all().map((entrada, indice) => {
                emojis += `${indice + 1} - ${entrada.data}\n`;
            });
            const embedNovo = new EmbedBuilder()
                .setTitle(`${interaction.guild.name} - Configura√ß√£o dos emojis`)
                .setDescription(`Selecione abaixo qual op√ß√£o deseja alterar em seus emojis. √â importante que voc√™ preste aten√ß√£o nas configura√ß√µes atuais para garantir que suas altera√ß√µes sejam feitas corretamente.\n\n${emojis}`)
                .setColor('#2b2d31');
    
            const linhaAcao = new ActionRowBuilder()
                .addComponents(
                    new ButtonBuilder()
                    .setLabel('Alterar')
                    .setStyle(1)
                    .setCustomId(`editemoji_${interaction.user.id}`)
                    .setEmoji('‚úèÔ∏è')
                )
                .addComponents(
                    new ButtonBuilder()
                    .setLabel('Voltar')
                    .setStyle(2)
                    .setCustomId(`voltarfr`)
                    .setEmoji('‚è™')
                );
    
            await interaction.message.edit({ embeds: [embedNovo], components: [linhaAcao] });
        } else if (interaction.customId.startsWith("altemojis_")) {
            const id = interaction.customId.slice(interaction.customId.indexOf('_')).replace('_', '');
            interaction.deferUpdate();
            if (interaction.user.id !== id) return;
            puxarEmbed();
        } else if (interaction.customId.startsWith('editemoji_')) {
            const id = interaction.customId.slice(interaction.customId.indexOf('_')).replace('_', '');
            if (interaction.user.id !== id) return;
            const modal = new ModalBuilder()
                .setCustomId(`editaremoji_${interaction.user.id}`)
                .setTitle(`‚úèÔ∏è Editar Emoji`);
    
            const Emoji = new TextInputBuilder()
                .setCustomId(`Emoji`)
                .setLabel(`O mais facil e com vc ü§£`)
                .setPlaceholder(`Exemplo: 1`)
                .setStyle(TextInputStyle.Short)
                .setRequired(true)
                .setMaxLength(2);
    
            const PrimeiraLinhaAcao = new ActionRowBuilder().addComponents(Emoji);
    
            modal.addComponents(PrimeiraLinhaAcao);
    
            await interaction.showModal(modal);
        }
    }

          
    


      
      
      
      
      
      
      
       if (interaction.customId === "tituloembed") {
        interaction.update({
          embeds: [
            new EmbedBuilder()
              .setTitle(`${interaction.guild.name} | Personalizar Mensagem de Compra`)
              .setDescription(
                `Envie o novo t√≠tulo da embed de compra, caso queira use as v√°riaves: \n- \`#{nome}\`\n- \`#{preco}\`\n- \`#{estoque}\``
              ),
          ],
          components: [
            new ActionRowBuilder().addComponents(
              new ButtonBuilder()
                .setCustomId("cancelartituloembed")
                .setStyle(4)
                .setEmoji(emoji.negar)
                .setLabel("Cancelar")
            ),
          ],
        }).then(() => {
          const filter = (m) => m.author.id === interaction.user.id;
          const collector = interaction.channel.createMessageCollector({
            filter,
            max: 1,
          });
          collector.on("collect", (message) => {
            message.delete();
            const newt = message.content;
            db.set(`titulo`, newt);
            interaction.channel
              .send(`${emoji.sim} | Titulo atualizado com sucesso!`)
              .then((editedMessage) => {
                setTimeout(() => {
                  editedMessage.delete().catch(console.error);
                }, 5000);
              });
      
            msg.edit({
              embeds: [
                new EmbedBuilder()
                  .setTitle(`${interaction.guild.name} | Personalizar Mensagem de Compra`)
                  .setFooter({ text: "Escolha oque voc√™ deseja mudar:" })
                  .setDescription(`**Titulo atual:** \`${db.get(`titulo`)}\` \n\n**Descri√ß√£o Atual:** ${db.get(`desc`)} \n\n **Rodap√© Atual:** \`${db.get(`rodape`) === "remover" ? "Sem rodap√©" : db.get(`rodape`)}\``)
              ],
              components: [
                new ActionRowBuilder().addComponents(
                  new ButtonBuilder()
                    .setLabel("Titulo da embed")
                    .setStyle(2)
                    .setEmoji(`${emoji.configura√ß√µes}`)
                    .setCustomId("tituloembed"),
                  new ButtonBuilder()
                    .setLabel("Descri√ß√£o da embed")
                    .setStyle(2)
                    .setEmoji(`${emoji.configura√ß√µes}`)
                    .setCustomId("descembed"),
                  new ButtonBuilder()
                    .setLabel("Rodap√© da Embed")
                    .setStyle(2)
                    .setEmoji(`${emoji.configura√ß√µes}`)
                    .setCustomId("rodapeembed"),
                  new ButtonBuilder()
                    .setLabel("Bot√£o da embed")
                    .setStyle(2)
                    .setEmoji(`${emoji.configura√ß√µes}`)
                    .setCustomId("buttonembed"),
                  new ButtonBuilder()
                    .setLabel("Resetar embed")
                    .setStyle(4)
                    .setEmoji(`${emoji.configura√ß√µes}`)
                    .setCustomId("embedresetar")
                ),
                new ActionRowBuilder().addComponents(
                  new ButtonBuilder()
                    .setCustomId("voltarfr")
                    .setStyle(2)
                    .setEmoji(emoji.setaEsquerda)
                    .setLabel("Voltar")
                ),
              ],
            });
          });
      
          
          client.on("interactionCreate", async (interaction) => {
            if (interaction.isButton() && interaction.customId === "cancelartituloembed") {
                collector.stop();
                interaction.update({
                    embeds: [
                      new EmbedBuilder()
                        .setTitle(`${interaction.guild.name} | Personalizar Mensagem de Compra`)
                        .setFooter({ text: "Escolha oque voc√™ deseja mudar:" })
                        .setDescription(`**Titulo atual:** \`${db.get(`titulo`)}\` \n\n**Descri√ß√£o Atual:** ${db.get(`desc`)} \n\n **Rodap√© Atual:** \`${db.get(`rodape`) === "remover" ? "Sem rodap√©" : db.get(`rodape`)}\``),
                    ],
                    components: [
                      new ActionRowBuilder().addComponents(
                        new ButtonBuilder()
                          .setLabel("Titulo da embed")
                          .setStyle(2)
                          .setEmoji(`${emoji.configura√ß√µes}`)
                          .setCustomId("tituloembed"),
                        new ButtonBuilder()
                          .setLabel("Descri√ß√£o da embed")
                          .setStyle(2)
                          .setEmoji(`${emoji.configura√ß√µes}`)
                          .setCustomId("descembed"),
                        new ButtonBuilder()
                          .setLabel("Rodap√© da Embed")
                          .setStyle(2)
                          .setEmoji(`${emoji.configura√ß√µes}`)
                          .setCustomId("rodapeembed"),
                        new ButtonBuilder()
                          .setLabel("Bot√£o da embed")
                          .setStyle(2)
                          .setEmoji(`${emoji.configura√ß√µes}`)
                          .setCustomId("buttonembed"),
                        new ButtonBuilder()
                          .setLabel("Resetar embed")
                          .setStyle(4)
                          .setEmoji(`${emoji.configura√ß√µes}`)
                          .setCustomId("embedresetar")
                      ),
                      new ActionRowBuilder().addComponents(
                        new ButtonBuilder()
                          .setCustomId("voltarfr")
                          .setStyle(1)
                          .setEmoji(emoji.setaEsquerda)
                          .setLabel("Voltar")
                      ),
                    ],
                  });
              }
          })
        });
      }
       if(interaction.customId === "descembed") {
        interaction.update({
            embeds:[
                new EmbedBuilder()
                .setTitle(`${interaction.guild.name} | Personalizar Mensagem de Compra`)
                .setDescription(`${emoji.setaDireita} | Envie a nova descri√ß√£o da embed de compra, use as v√°riaveis: \n- \`#{desc}\` \n- \`#{nome}\` \n- \`#{preco}\`\n- \`#{estoque}\``)
            ],
            components:[
                new ActionRowBuilder()
                .addComponents(
                    new ButtonBuilder()
                    .setCustomId("cancelardescembed")
                    .setStyle(4)
                    .setEmoji(emoji.negar)
                    .setLabel("Cancelar")
                )
            ]
        }).then(() => {
            const filter = m => m.author.id === interaction.user.id;
            const collector = interaction.channel.createMessageCollector({ filter, max: 1 });
             collector.on("collect", message => {
               message.delete()
               const newt = message.content
               db.set(`desc`, newt)
               interaction.channel.send(`${emoji.sim} | Descri√ß√£o atualizado com sucesso!`).then((editedMessage) => {
                setTimeout(() => {
                  editedMessage.delete().catch(console.error);
                }, 5000); 
              });
              
            msg.edit({  
                embeds:[
                new EmbedBuilder()
                .setTitle(`${interaction.guild.name} | Personalizar Mensagem de Compra`)
                .setFooter({text:"Escolha oque voc√™ deseja mudar:"})
                .setDescription(`**Titulo atual:** \`${db.get(`titulo`)}\` \n\n**Descri√ß√£o Atual:** ${db.get(`desc`)} \n\n **Rodap√© Atual:** \`${db.get(`rodape`) === "remover" ? "Sem rodap√©" : db.get(`rodape`)}\``)
            ],
            components:[
                new ActionRowBuilder()
                .addComponents(
                    new ButtonBuilder()
                    .setLabel("Titulo da embed")
                    .setStyle(2)
                    .setEmoji(`${emoji.configura√ß√µes}`)
                    .setCustomId("tituloembed"),
                    new ButtonBuilder()
                    .setLabel("Descri√ß√£o da embed")
                    .setStyle(2)
                    .setEmoji(`${emoji.configura√ß√µes}`)
                    .setCustomId("descembed"),
                    new ButtonBuilder()
                    .setLabel("Rodap√© da Embed")
                    .setStyle(2)
                    .setEmoji(`${emoji.configura√ß√µes}`)
                    .setCustomId("rodapeembed"),
                    new ButtonBuilder()
                    .setLabel("Bot√£o da embed")
                    .setStyle(2)
                    .setEmoji(`${emoji.configura√ß√µes}`)
                    .setCustomId("buttonembed"),
                    new ButtonBuilder()
                    .setLabel("Resetar embed")
                    .setStyle(4)
                    .setEmoji(`${emoji.configura√ß√µes}`)
                    .setCustomId("embedresetar"),
                ),
                new ActionRowBuilder()
                .addComponents(
                    new ButtonBuilder()
                    .setCustomId("voltarfr")
                    .setStyle(2)
                    .setEmoji(emoji.setaEsquerda)
                    .setLabel("Voltar")
                )
            ]})  
               })
               client.on("interactionCreate", async (interaction) => {
                if (interaction.isButton() && interaction.customId === "cancelardescembed") {
                    collector.stop();
                    interaction.update({
                        embeds: [
                          new EmbedBuilder()
                            .setTitle(`${interaction.guild.name} | Personalizar Mensagem de Compra`)
                            .setFooter({ text: "Escolha oque voc√™ deseja mudar:" })
                            .setDescription(`**Titulo atual:** \`${db.get(`titulo`)}\` \n\n**Descri√ß√£o Atual:** ${db.get(`desc`)} \n\n **Rodap√© Atual:** \`${db.get(`rodape`) === "remover" ? "Sem rodap√©" : db.get(`rodape`)}\``)
                        ],
                        components: [
                          new ActionRowBuilder().addComponents(
                            new ButtonBuilder()
                              .setLabel("Titulo da embed")
                              .setStyle(2)
                              .setEmoji(`${emoji.configura√ß√µes}`)
                              .setCustomId("tituloembed"),
                            new ButtonBuilder()
                              .setLabel("Descri√ß√£o da embed")
                              .setStyle(2)
                              .setEmoji(`${emoji.configura√ß√µes}`)
                              .setCustomId("descembed"),
                            new ButtonBuilder()
                              .setLabel("Rodap√© da Embed")
                              .setStyle(2)
                              .setEmoji(`${emoji.configura√ß√µes}`)
                              .setCustomId("rodapeembed"),
                            new ButtonBuilder()
                              .setLabel("Bot√£o da embed")
                              .setStyle(2)
                              .setEmoji(`${emoji.configura√ß√µes}`)
                              .setCustomId("buttonembed"),
                            new ButtonBuilder()
                              .setLabel("Resetar embed")
                              .setStyle(4)
                              .setEmoji(`${emoji.configura√ß√µes}`)
                              .setCustomId("embedresetar")
                          ),
                          new ActionRowBuilder().addComponents(
                            new ButtonBuilder()
                              .setCustomId("voltarfr")
                              .setStyle(2)
                              .setEmoji(emoji.setaEsquerda)
                              .setLabel("Voltar")
                          ),
                        ],
                      });
                  }
              })
             })


                 


           }
           if(interaction.customId === "rodapeembed") {
            interaction.update({
                embeds:[
                    new EmbedBuilder()
                    .setTitle(`${interaction.guild.name} | Personalizar Mensagem de Compra`)
                    .setDescription(`${emoji.setaDireita} | Envie o novo rodap√© abaixo: **Obs: Caso queira remover envie "remover"**`)
                ],
                components:[
                    new ActionRowBuilder()
                    .addComponents(
                        new ButtonBuilder()
                        .setCustomId("cancelarrodapeembed")
                        .setStyle(4)
                        .setEmoji(emoji.negar)
                        .setLabel("Cancelar")
                    )
                ]
            }).then(() => {
                const filter = m => m.author.id === interaction.user.id;
                const collector = interaction.channel.createMessageCollector({ filter, max: 1 });
                 collector.on("collect", message => {
                   message.delete()
                   const newt = message.content
                   if(message.content === "remover") {
                    db.set(`rodape`, "remover")

                    msg.edit({  
                        embeds:[
                        new EmbedBuilder()
                        .setTitle(`${interaction.guild.name} | Personalizar Mensagem de Compra`)
                        .setFooter({text:"Escolha oque voc√™ deseja mudar:"})
                        .setDescription(`**Titulo atual:** \`${db.get(`titulo`)}\` \n\n**Descri√ß√£o Atual:** ${db.get(`desc`)} \n\n **Rodap√© Atual:** \`${db.get(`rodape`) === "remover" ? "Sem rodap√©" : db.get(`rodape`)}\``)
                    ],
                    components:[
                        new ActionRowBuilder()
                        .addComponents(
                            new ButtonBuilder()
                            .setLabel("Titulo da embed")
                            .setStyle(2)
                            .setEmoji(`${emoji.configura√ß√µes}`)
                            .setCustomId("tituloembed"),
                            new ButtonBuilder()
                            .setLabel("Descri√ß√£o da embed")
                            .setStyle(2)
                            .setEmoji(`${emoji.configura√ß√µes}`)
                            .setCustomId("descembed"),
                            new ButtonBuilder()
                            .setLabel("Rodap√© da Embed")
                            .setStyle(2)
                            .setEmoji(`${emoji.configura√ß√µes}`)
                            .setCustomId("rodapeembed"),
                            new ButtonBuilder()
                            .setLabel("Bot√£o da embed")
                            .setStyle(2)
                            .setEmoji(`${emoji.configura√ß√µes}`)
                            .setCustomId("buttonembed"),
                            new ButtonBuilder()
                            .setLabel("Resetar embed")
                            .setStyle(4)
                            .setEmoji(`${emoji.configura√ß√µes}`)
                            .setCustomId("embedresetar"),
                        ),
                        new ActionRowBuilder()
                        .addComponents(
                            new ButtonBuilder()
                            .setCustomId("voltarfr")
                            .setStyle(2)
                            .setEmoji(emoji.setaEsquerda)
                            .setLabel("Voltar")
                        )
                    ]})  
                    return;
                   }
                   db.set(`rodape`, newt)
                   interaction.channel.send(`${emoji.sim} | Rodap√© atualizado com sucesso!`).then((editedMessage) => {
                    setTimeout(() => {
                      editedMessage.delete().catch(console.error);
                    }, 5000); 
                  });
                  
                msg.edit({  
                    embeds:[
                    new EmbedBuilder()
                    .setTitle(`${interaction.guild.name} | Personalizar Mensagem de Compra`)
                    .setFooter({text:"Escolha oque voc√™ deseja mudar:"})
                    .setDescription(`**Titulo atual:** \`${db.get(`titulo`)}\` \n\n**Descri√ß√£o Atual:** ${db.get(`desc`)} \n\n **Rodap√© Atual:** \`${db.get(`rodape`) === "remover" ? "Sem rodap√©" : db.get(`rodape`)}\``)
                ],
                components:[
                    new ActionRowBuilder()
                    .addComponents(
                        new ButtonBuilder()
                        .setLabel("Titulo da embed")
                        .setStyle(2)
                        .setEmoji(`${emoji.configura√ß√µes}`)
                        .setCustomId("tituloembed"),
                        new ButtonBuilder()
                        .setLabel("Descri√ß√£o da embed")
                        .setStyle(2)
                        .setEmoji(`${emoji.configura√ß√µes}`)
                        .setCustomId("descembed"),
                        new ButtonBuilder()
                        .setLabel("Rodap√© da Embed")
                        .setStyle(2)
                        .setEmoji(`${emoji.configura√ß√µes}`)
                        .setCustomId("rodapeembed"),
                        new ButtonBuilder()
                        .setLabel("Bot√£o da embed")
                        .setStyle(2)
                        .setEmoji(`${emoji.configura√ß√µes}`)
                        .setCustomId("buttonembed"),
                        new ButtonBuilder()
                        .setLabel("Resetar embed")
                        .setStyle(4)
                        .setEmoji(`${emoji.configura√ß√µes}`)
                        .setCustomId("embedresetar"),
                    ),
                    new ActionRowBuilder()
                    .addComponents(
                        new ButtonBuilder()
                        .setCustomId("voltarfr")
                        .setStyle(2)
                        .setEmoji(emoji.setaEsquerda)
                        .setLabel("Voltar")
                    )
                ]})  
                   })
                   client.on("interactionCreate", async (interaction) => {
                    if (interaction.isButton() && interaction.customId === "cancelarrodapeembed") {
                        collector.stop();
                        interaction.update({
                            embeds: [
                              new EmbedBuilder()
                                .setTitle(`${interaction.guild.name} | Personalizar Mensagem de Compra`)
                                .setFooter({ text: "Escolha oque voc√™ deseja mudar:" })
                                .setDescription(`**Titulo atual:** \`${db.get(`titulo`)}\` \n\n**Descri√ß√£o Atual:** ${db.get(`desc`)} \n\n **Rodap√© Atual:** \`${db.get(`rodape`) === "remover" ? "Sem rodap√©" : db.get(`rodape`)}\``),
                            ],
                            components: [
                              new ActionRowBuilder().addComponents(
                                new ButtonBuilder()
                                  .setLabel("Titulo da embed")
                                  .setStyle(2)
                                  .setEmoji(`${emoji.configura√ß√µes}`)
                                  .setCustomId("tituloembed"),
                                new ButtonBuilder()
                                  .setLabel("Descri√ß√£o da embed")
                                  .setStyle(2)
                                  .setEmoji(`${emoji.configura√ß√µes}`)
                                  .setCustomId("descembed"),
                                new ButtonBuilder()
                                  .setLabel("Rodap√© da Embed")
                                  .setStyle(2)
                                  .setEmoji(`${emoji.configura√ß√µes}`)
                                  .setCustomId("rodapeembed"),
                                new ButtonBuilder()
                                  .setLabel("Bot√£o da embed")
                                  .setStyle(2)
                                  .setEmoji(`${emoji.configura√ß√µes}`)
                                  .setCustomId("buttonembed"),
                                new ButtonBuilder()
                                  .setLabel("Resetar embed")
                                  .setStyle(4)
                                  .setEmoji(`${emoji.configura√ß√µes}`)
                                  .setCustomId("embedresetar")
                              ),
                              new ActionRowBuilder().addComponents(
                                new ButtonBuilder()
                                  .setCustomId("voltarfr")
                                  .setStyle(2)
                                  .setEmoji(emoji.setaEsquerda)
                                  .setLabel("Voltar")
                              ),
                            ],
                          });
                      }
                  })
                 })



           }
           if(interaction.customId === "buttonembed") {
            let style = "";

            switch (db.get(`button.style`)) {
                case 1:{style = "azul"}
                    
                    break;
                    case 2: {style = "cinza"}
                        
                        break;
                        case 3:{style = "verde"}
                            
                            break;
                            case 4:{style = "vermelho"}
                                
                                break;
            
                default:
                    break;
            }
            interaction.update({
                embeds:[
                    new EmbedBuilder()
                    .setTitle(`${interaction.guild.name} | Personalizar Mensagem de Compra`)
                    .setFooter({text:"Escolha oque Voc√™ deseja mudar:"})
                    .setDescription(`**Texto do bot√£o:** \`${db.get(`button.text`)}\` \n\n **Cor do Bot√£o:** \`${style}\` \n\n **Emoji do Bot√£o:** ${db.get(`button.emoji`)}`)
                ],
                components:[
                    new ActionRowBuilder()
                    .addComponents(
                        new ButtonBuilder()
                        .setCustomId("textobuttonmudar")
                        .setLabel("Texto do Bot√£o")
                        .setStyle(2)
                        .setEmoji(emoji.configura√ß√µes),
                        new ButtonBuilder()
                        .setCustomId("corbuttonmudar")
                        .setLabel("Cor do Bot√£o")
                        .setStyle(2)
                        .setEmoji(emoji.configura√ß√µes),
                        new ButtonBuilder()
                        .setCustomId("emojibuttonmudar")
                        .setLabel("Emoji do Bot√£o")
                        .setStyle(2)
                        .setEmoji(emoji.configura√ß√µes),
                        new ButtonBuilder()
                        .setCustomId("personalizarmensagem")
                        .setLabel("Voltar")
                        .setStyle(2)
                        .setEmoji(emoji.setaEsquerda)
                    )
                ]
            })
           }
           if(interaction.customId === "textobuttonembed") {
            const modal = new ModalBuilder()
            .setCustomId("modal_mudar_label_button")
            .setTitle("üîß | Alterar Texto do Bot√£o");

            const text = new TextInputBuilder()
            .setCustomId("text")
            .setLabel("NOVO TEXTO DO BOT√ÉO:")
            .setStyle(2)
            .setMaxLength(50)
            .setMinLength(1)
            .setRequired(true)
            .setPlaceholder("Ex: Comprar");

            modal.addComponents(new ActionRowBuilder().addComponents(text));

            await interaction.showModal(modal)
           }
           if(interaction.customId === "corbuttonmudar") {

            interaction.update({
                embeds:[
                    new EmbedBuilder()
                    .setTitle(`${interaction.guild.name} | Personalizar Mensagem de Compra`)
                    .setDescription(`${emoji.setaDireita} | Escolha uma cor para o bot√£o:`)
                ],
                components:[
                    new ActionRowBuilder()
                    .addComponents(
                        new ButtonBuilder()
                        .setCustomId("buttonazul")
                        .setLabel("Azul")
                        .setStyle(2),
                        new ButtonBuilder()
                        .setCustomId("buttonvermelho")
                        .setLabel("Vermelho")
                        .setStyle(4),
                        new ButtonBuilder()
                        .setCustomId("buttonverde")
                        .setLabel("Verde")
                        .setStyle(3),
                        new ButtonBuilder()
                        .setCustomId("buttoncinza")
                        .setLabel("Cinza")
                        .setStyle(2),
                        new ButtonBuilder()
                        .setCustomId("buttoncolorvoltar123")
                        .setLabel("Voltar")
                        .setEmoji(emoji.setaEsquerda)
                        .setStyle(2),
                    )
                ]
            })

           }

           if(interaction.customId === "buttonazul") {
            let style = "";
            db.set(`button.style`, 1)
            switch (db.get(`button.style`)) {
                case 1:{style = "azul"}
                    
                    break;
                    case 2: {style = "cinza"}
                        
                        break;
                        case 3:{style = "verde"}
                            
                            break;
                            case 4:{style = "vermelho"}
                                
                                break;
            
                default:
                    break;
            }
            interaction.update({
                embeds:[
                    new EmbedBuilder()
                    .setTitle(`${interaction.guild.name} | Personalizar Mensagem de Compra`)
                    .setFooter({text:"Escolha oque Voc√™ deseja mudar:"})
                    .setDescription(`**Texto do bot√£o:** \`${db.get(`button.text`)}\` \n\n **Cor do Bot√£o:** \`${style}\` \n\n **Emoji do Bot√£o:** ${db.get(`button.emoji`)}`)
                ],
                components:[
                    new ActionRowBuilder()
                    .addComponents(
                        new ButtonBuilder()
                        .setCustomId("textobuttonmudar")
                        .setLabel("Texto do Bot√£o")
                        .setStyle(2)
                        .setEmoji(emoji.configura√ß√µes),
                        new ButtonBuilder()
                        .setCustomId("corbuttonmudar")
                        .setLabel("Cor do Bot√£o")
                        .setStyle(2)
                        .setEmoji(emoji.configura√ß√µes),
                        new ButtonBuilder()
                        .setCustomId("emojibuttonmudar")
                        .setLabel("Emoji do Bot√£o")
                        .setStyle(2)
                        .setEmoji(emoji.configura√ß√µes),
                        new ButtonBuilder()
                        .setCustomId("personalizarmensagem")
                        .setLabel("Voltar")
                        .setStyle(2)
                        .setEmoji(emoji.setaEsquerda)
                    )
                ]
            })
           }

           if(interaction.customId === "buttonvermelho") {
            let style = "";
            db.set(`button.style`, 4)
            switch (db.get(`button.style`)) {
                case 1:{style = "azul"}
                    
                    break;
                    case 2: {style = "cinza"}
                        
                        break;
                        case 3:{style = "verde"}
                            
                            break;
                            case 4:{style = "vermelho"}
                                
                                break;
            
                default:
                    break;
            }
            interaction.update({
                embeds:[
                    new EmbedBuilder()
                    .setTitle(`${interaction.guild.name} | Personalizar Mensagem de Compra`)
                    .setFooter({text:"Escolha oque Voc√™ deseja mudar:"})
                    .setDescription(`**Texto do bot√£o:** \`${db.get(`button.text`)}\` \n\n **Cor do Bot√£o:** \`${style}\` \n\n **Emoji do Bot√£o:** ${db.get(`button.emoji`)}`)
                ],
                components:[
                    new ActionRowBuilder()
                    .addComponents(
                        new ButtonBuilder()
                        .setCustomId("textobuttonmudar")
                        .setLabel("Texto do Bot√£o")
                        .setStyle(2)
                        .setEmoji(emoji.configura√ß√µes),
                        new ButtonBuilder()
                        .setCustomId("corbuttonmudar")
                        .setLabel("Cor do Bot√£o")
                        .setStyle(2)
                        .setEmoji(emoji.configura√ß√µes),
                        new ButtonBuilder()
                        .setCustomId("emojibuttonmudar")
                        .setLabel("Emoji do Bot√£o")
                        .setStyle(2)
                        .setEmoji(emoji.configura√ß√µes),
                        new ButtonBuilder()
                        .setCustomId("personalizarmensagem")
                        .setLabel("Voltar")
                        .setStyle(2)
                        .setEmoji(emoji.setaEsquerda)
                    )
                ]
            })
           }

           if(interaction.customId === "emojibuttonmudar") {
            const modal = new ModalBuilder()
            .setCustomId("modal_mudar_emoji")
            .setTitle("üîß | Alterar Emoji do Bot√£o");

            const text = new TextInputBuilder()
            .setCustomId("text")
            .setLabel("NOVO EMOJI DO BOT√ÉO:")
            .setStyle(2)
            .setRequired(true)
            .setPlaceholder("Ex: üõí");

            modal.addComponents(new ActionRowBuilder().addComponents(text));
            await interaction.showModal(modal)
            
           }


           if(interaction.customId === "buttonverde") {
            let style = "";
            db.set(`button.style`, 3)
            switch (db.get(`button.style`)) {
                case 1:{style = "azul"}
                    
                    break;
                    case 2: {style = "cinza"}
                        
                        break;
                        case 3:{style = "verde"}
                            
                            break;
                            case 4:{style = "vermelho"}
                                
                                break;
            
                default:
                    break;
            }
            interaction.update({
                embeds:[
                    new EmbedBuilder()
                    .setTitle(`${interaction.guild.name} | Personalizar Mensagem de Compra`)
                    .setFooter({text:"Escolha oque Voc√™ deseja mudar:"})
                    .setDescription(`**Texto do bot√£o:** \`${db.get(`button.text`)}\` \n\n **Cor do Bot√£o:** \`${style}\` \n\n **Emoji do Bot√£o:** ${db.get(`button.emoji`)}`)
                ],
                components:[
                    new ActionRowBuilder()
                    .addComponents(
                        new ButtonBuilder()
                        .setCustomId("textobuttonmudar")
                        .setLabel("Texto do Bot√£o")
                        .setStyle(2)
                        .setEmoji(emoji.configura√ß√µes),
                        new ButtonBuilder()
                        .setCustomId("corbuttonmudar")
                        .setLabel("Cor do Bot√£o")
                        .setStyle(2)
                        .setEmoji(emoji.configura√ß√µes),
                        new ButtonBuilder()
                        .setCustomId("emojibuttonmudar")
                        .setLabel("Emoji do Bot√£o")
                        .setStyle(2)
                        .setEmoji(emoji.configura√ß√µes),
                        new ButtonBuilder()
                        .setCustomId("personalizarmensagem")
                        .setLabel("Voltar")
                        .setStyle(2)
                        .setEmoji(emoji.setaEsquerda)
                    )
                ]
            })
           }

           if(interaction.customId === "buttoncinza") {
            let style = "";
            db.set(`button.style`, 2)
            switch (db.get(`button.style`)) {
                case 1:{style = "azul"}
                    
                    break;
                    case 2: {style = "cinza"}
                        
                        break;
                        case 3:{style = "verde"}
                            
                            break;
                            case 4:{style = "vermelho"}
                                
                                break;
            
                default:
                    break;
            }
            interaction.update({
                embeds:[
                    new EmbedBuilder()
                    .setTitle(`${interaction.guild.name} | Personalizar Mensagem de Compra`)
                    .setFooter({text:"Escolha oque Voc√™ deseja mudar:"})
                    .setDescription(`**Texto do bot√£o:** \`${db.get(`button.text`)}\` \n\n **Cor do Bot√£o:** \`${style}\` \n\n **Emoji do Bot√£o:** ${db.get(`button.emoji`)}`)
                ],
                components:[
                    new ActionRowBuilder()
                    .addComponents(
                        new ButtonBuilder()
                        .setCustomId("textobuttonmudar")
                        .setLabel("Texto do Bot√£o")
                        .setStyle(2)
                        .setEmoji(emoji.configura√ß√µes),
                        new ButtonBuilder()
                        .setCustomId("corbuttonmudar")
                        .setLabel("Cor do Bot√£o")
                        .setStyle(2)
                        .setEmoji(emoji.configura√ß√µes),
                        new ButtonBuilder()
                        .setCustomId("emojibuttonmudar")
                        .setLabel("Emoji do Bot√£o")
                        .setStyle(2)
                        .setEmoji(emoji.configura√ß√µes),
                        new ButtonBuilder()
                        .setCustomId("personalizarmensagem")
                        .setLabel("Voltar")
                        .setStyle(2)
                        .setEmoji(emoji.setaEsquerda)
                    )
                ]
            })
           }

           if(interaction.customId === "buttoncolorvoltar123") {
            let style = "";
            switch (db.get(`button.style`)) {
                case 1:{style = "azul"}
                    
                    break;
                    case 2: {style = "cinza"}
                        
                        break;
                        case 3:{style = "verde"}
                            
                            break;
                            case 4:{style = "vermelho"}
                                
                                break;
            
                default:
                    break;
            }
            interaction.update({
                embeds:[
                    new EmbedBuilder()
                    .setTitle(`${interaction.guild.name} | Personalizar Mensagem de Compra`)
                    .setFooter({text:"Escolha oque Voc√™ deseja mudar:"})
                    .setDescription(`**Texto do bot√£o:** \`${db.get(`button.text`)}\` \n\n **Cor do Bot√£o:** \`${style}\` \n\n **Emoji do Bot√£o:** ${db.get(`button.emoji`)}`)
                ],
                components:[
                    new ActionRowBuilder()
                    .addComponents(
                        new ButtonBuilder()
                        .setCustomId("textobuttonmudar")
                        .setLabel("Texto do Bot√£o")
                        .setStyle(2)
                        .setEmoji(emoji.configura√ß√µes),
                        new ButtonBuilder()
                        .setCustomId("corbuttonmudar")
                        .setLabel("Cor do Bot√£o")
                        .setStyle(2)
                        .setEmoji(emoji.configura√ß√µes),
                        new ButtonBuilder()
                        .setCustomId("emojibuttonmudar")
                        .setLabel("Emoji do Bot√£o")
                        .setStyle(2)
                        .setEmoji(emoji.configura√ß√µes),
                        new ButtonBuilder()
                        .setCustomId("personalizarmensagem")
                        .setLabel("Voltar")
                        .setStyle(2)
                        .setEmoji(emoji.setaEsquerda)
                    )
                ]
            })
           }

           client.on("interactionCreate", async(interaction) => {
            if(interaction.isModalSubmit() && interaction.customId === "modal_mudar_label_button") {
                const text = interaction.fields.getTextInputValue("text")
                let style = "";

            switch (db.get(`button.style`)) {
                case 1:{style = "azul"}
                    
                    break;
                    case 2: {style = "cinza"}
                        
                        break;
                        case 3:{style = "verde"}
                            
                            break;
                            case 4:{style = "vermelho"}
                                
                                break;
            
                default:
                    break;
            }
            db.set(`button.text`, text)
            interaction.update({
                embeds:[
                    new EmbedBuilder()
                    .setTitle(`${interaction.guild.name} | Personalizar Mensagem de Compra`)
                    .setFooter({text:"Escolha oque Voc√™ deseja mudar:"})
                    .setDescription(`**Texto do bot√£o:** \`${db.get(`button.text`)}\` \n\n **Cor do Bot√£o:** \`${style}\` \n\n **Emoji do Bot√£o:** ${db.get(`button.emoji`)}`)
                ],
                components:[
                    new ActionRowBuilder()
                    .addComponents(
                        new ButtonBuilder()
                        .setCustomId("textobuttonmudar")
                        .setLabel("Texto do Bot√£o")
                        .setStyle(2)
                        .setEmoji(emoji.configura√ß√µes),
                        new ButtonBuilder()
                        .setCustomId("corbuttonmudar")
                        .setLabel("Cor do Bot√£o")
                        .setStyle(2)
                        .setEmoji(emoji.configura√ß√µes),
                        new ButtonBuilder()
                        .setCustomId("emojibuttonmudar")
                        .setLabel("Emoji do Bot√£o")
                        .setStyle(2)
                        .setEmoji(emoji.configura√ß√µes),
                        new ButtonBuilder()
                        .setCustomId("personalizarmensagem")
                        .setLabel("Voltar")
                        .setStyle(2)
                        .setEmoji(emoji.setaEsquerda)
                    )
                ]
            })
            }
            if(interaction.isModalSubmit() && interaction.customId === "modal_mudar_emoji") {
                const text = interaction.fields.getTextInputValue("text")

        const emojis = text
      
        const emojiverification = interaction.client.emojis.cache.find(emoji => `<:${emoji.name}:${emoji.id}>` === emojis) || interaction.client.emojis.cache.find(emoji => emoji.name === emojis) || interaction.client.emojis.cache.get(emojis);
  
        const customEmojiRegex = /<a?:\w+:\d+>/; 
  const unicodeEmojiRegex = /[\uD83C-\uDBFF\uDC00-\uDFFF\u2600-\u26FF\u2700-\u27BF]/; 
  const animatedEmojiRegex = /<a:\w+:\d+>/; 
  

          if (!emojiverification && !emojis.match(customEmojiRegex) &&
          !emojis.match(unicodeEmojiRegex) &&
          !emojis.match(animatedEmojiRegex)) {
              interaction.reply({
                ephemeral:true,
                  embeds: [
                      new EmbedBuilder()
                      .setColor("Red")
                      .setDescription(`**‚ùå - N√£o encontrei nenhum emoji que tenha nome  ou que tenha id , Use Emojis deste servidor!**`)
                  ]
              });
              return;
          } 

          db.set(`button.emoji`, text) 
          let style = "";
            db.set(`button.style`, 4)
            switch (db.get(`button.style`)) {
                case 1:{style = "azul"}
                    
                    break;
                    case 2: {style = "cinza"}
                        
                        break;
                        case 3:{style = "verde"}
                            
                            break;
                            case 4:{style = "vermelho"}
                                
                                break;
            
                default:
                    break;
            }
            interaction.update({
                embeds:[
                    new EmbedBuilder()
                    .setTitle(`${interaction.guild.name} | Personalizar Mensagem de Compra`)
                    .setFooter({text:"Escolha oque Voc√™ deseja mudar:"})
                    .setDescription(`**Texto do bot√£o:** \`${db.get(`button.text`)}\` \n\n **Cor do Bot√£o:** \`${style}\` \n\n **Emoji do Bot√£o:** ${db.get(`button.emoji`)}`)
                ],
                components:[
                    new ActionRowBuilder()
                    .addComponents(
                        new ButtonBuilder()
                        .setCustomId("textobuttonmudar")
                        .setLabel("Texto do Bot√£o")
                        .setStyle(2)
                        .setEmoji(emoji.configura√ß√µes),
                        new ButtonBuilder()
                        .setCustomId("corbuttonmudar")
                        .setLabel("Cor do Bot√£o")
                        .setStyle(2)
                        .setEmoji(emoji.configura√ß√µes),
                        new ButtonBuilder()
                        .setCustomId("emojibuttonmudar")
                        .setLabel("Emoji do Bot√£o")
                        .setStyle(2)
                        .setEmoji(emoji.configura√ß√µes),
                        new ButtonBuilder()
                        .setCustomId("personalizarmensagem")
                        .setLabel("Voltar")
                        .setStyle(2)
                        .setEmoji(emoji.setaEsquerda)
                    )
                ]
            })

            }
           })
        })
    }
}